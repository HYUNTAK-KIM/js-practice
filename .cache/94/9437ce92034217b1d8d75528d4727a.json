{"id":"main.js","dependencies":[{"name":"C:\\WORK\\fastcampus\\vscode_workspace\\js-test\\package.json","includedInParent":true,"mtime":1645467810244}],"generated":{"js":"/* const heropy = {\r\n  firstName: 'Hyun Tak',\r\n  lastName: 'Kim',\r\n  getFullName: function () {\r\n    return `${this.firstName} ${this.lastName}`\r\n  }\r\n}\r\nconsole.log(heropy.getFullName())\r\n\r\nfunction user(first2, last2) {\r\n  this.firstName = first2\r\n  this.lastName = last2\r\n}\r\nuser.prototype.getFullName = function () {\r\n  return `${this.firstName} ${this.lastName}`\r\n}\r\n\r\nconst heropy2 = new user('Hyun Tak', 'Kim')\r\n\r\nconsole.log(heropy2.getFullName()) */\n// this\n// 일반(Normal) 함수는 호출 위치에서 따라 this 정의!\n// 화살표(Arrow) 함수는 자신이 선언된 함수 범위에서 this 정의!\n\n/* const heropy = {\r\n  name: 'Heropy',\r\n  normal: function () {\r\n    console.log(this.name)\r\n  },\r\n  arrow: () => {\r\n    console.log(this.name)\r\n  }\r\n}\r\nheropy.normal()\r\nheropy.arrow()\r\n\r\nconst amy = {\r\n  name: 'Amy',\r\n  normal: heropy.normal,\r\n  arrow: heropy.arrow\r\n}\r\namy.normal()\r\namy.arrow() */\n\n/* const result = 'Hello world!'.indexOf('Heropy')\r\nconsole.log(result) \r\n\r\n// String.prototype.indexOf() */\nvar str = 'eggu24@gmail.com';\nconsole.log(str.match(/.+(?=@)/)[0]);"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":1,"column":0},"source":"main.js","original":{"line":1,"column":0}},{"generated":{"line":2,"column":0},"source":"main.js","original":{"line":2,"column":0}},{"generated":{"line":3,"column":0},"source":"main.js","original":{"line":3,"column":0}},{"generated":{"line":4,"column":0},"source":"main.js","original":{"line":4,"column":0}},{"generated":{"line":5,"column":0},"source":"main.js","original":{"line":5,"column":0}},{"generated":{"line":6,"column":0},"source":"main.js","original":{"line":6,"column":0}},{"generated":{"line":7,"column":0},"source":"main.js","original":{"line":7,"column":0}},{"generated":{"line":8,"column":0},"source":"main.js","original":{"line":8,"column":0}},{"generated":{"line":9,"column":0},"source":"main.js","original":{"line":9,"column":0}},{"generated":{"line":10,"column":0},"source":"main.js","original":{"line":10,"column":0}},{"generated":{"line":11,"column":0},"source":"main.js","original":{"line":11,"column":0}},{"generated":{"line":12,"column":0},"source":"main.js","original":{"line":12,"column":0}},{"generated":{"line":13,"column":0},"source":"main.js","original":{"line":13,"column":0}},{"generated":{"line":14,"column":0},"source":"main.js","original":{"line":14,"column":0}},{"generated":{"line":15,"column":0},"source":"main.js","original":{"line":15,"column":0}},{"generated":{"line":16,"column":0},"source":"main.js","original":{"line":16,"column":0}},{"generated":{"line":17,"column":0},"source":"main.js","original":{"line":17,"column":0}},{"generated":{"line":18,"column":0},"source":"main.js","original":{"line":18,"column":0}},{"generated":{"line":19,"column":0},"source":"main.js","original":{"line":19,"column":0}},{"generated":{"line":20,"column":0},"source":"main.js","original":{"line":20,"column":0}},{"generated":{"line":21,"column":0},"source":"main.js","original":{"line":22,"column":0}},{"generated":{"line":22,"column":0},"source":"main.js","original":{"line":23,"column":0}},{"generated":{"line":23,"column":0},"source":"main.js","original":{"line":24,"column":0}},{"generated":{"line":25,"column":0},"source":"main.js","original":{"line":26,"column":0}},{"generated":{"line":26,"column":0},"source":"main.js","original":{"line":27,"column":0}},{"generated":{"line":27,"column":0},"source":"main.js","original":{"line":28,"column":0}},{"generated":{"line":28,"column":0},"source":"main.js","original":{"line":29,"column":0}},{"generated":{"line":29,"column":0},"source":"main.js","original":{"line":30,"column":0}},{"generated":{"line":30,"column":0},"source":"main.js","original":{"line":31,"column":0}},{"generated":{"line":31,"column":0},"source":"main.js","original":{"line":32,"column":0}},{"generated":{"line":32,"column":0},"source":"main.js","original":{"line":33,"column":0}},{"generated":{"line":33,"column":0},"source":"main.js","original":{"line":34,"column":0}},{"generated":{"line":34,"column":0},"source":"main.js","original":{"line":35,"column":0}},{"generated":{"line":35,"column":0},"source":"main.js","original":{"line":36,"column":0}},{"generated":{"line":36,"column":0},"source":"main.js","original":{"line":37,"column":0}},{"generated":{"line":37,"column":0},"source":"main.js","original":{"line":38,"column":0}},{"generated":{"line":38,"column":0},"source":"main.js","original":{"line":39,"column":0}},{"generated":{"line":39,"column":0},"source":"main.js","original":{"line":40,"column":0}},{"generated":{"line":40,"column":0},"source":"main.js","original":{"line":41,"column":0}},{"generated":{"line":41,"column":0},"source":"main.js","original":{"line":42,"column":0}},{"generated":{"line":42,"column":0},"source":"main.js","original":{"line":43,"column":0}},{"generated":{"line":43,"column":0},"source":"main.js","original":{"line":44,"column":0}},{"generated":{"line":45,"column":0},"source":"main.js","original":{"line":46,"column":0}},{"generated":{"line":46,"column":0},"source":"main.js","original":{"line":47,"column":0}},{"generated":{"line":47,"column":0},"source":"main.js","original":{"line":48,"column":0}},{"generated":{"line":48,"column":0},"source":"main.js","original":{"line":49,"column":0}},{"generated":{"line":49,"column":0},"source":"main.js","original":{"line":51,"column":0}},{"name":"str","generated":{"line":49,"column":4},"source":"main.js","original":{"line":51,"column":6}},{"generated":{"line":49,"column":7},"source":"main.js","original":{"line":51,"column":9}},{"generated":{"line":49,"column":10},"source":"main.js","original":{"line":51,"column":12}},{"generated":{"line":49,"column":28},"source":"main.js","original":{"line":51,"column":0}},{"name":"console","generated":{"line":50,"column":0},"source":"main.js","original":{"line":53,"column":0}},{"generated":{"line":50,"column":7},"source":"main.js","original":{"line":53,"column":7}},{"name":"log","generated":{"line":50,"column":8},"source":"main.js","original":{"line":53,"column":8}},{"generated":{"line":50,"column":11},"source":"main.js","original":{"line":53,"column":0}},{"name":"str","generated":{"line":50,"column":12},"source":"main.js","original":{"line":53,"column":12}},{"generated":{"line":50,"column":15},"source":"main.js","original":{"line":53,"column":15}},{"name":"match","generated":{"line":50,"column":16},"source":"main.js","original":{"line":53,"column":16}},{"generated":{"line":50,"column":21},"source":"main.js","original":{"line":53,"column":12}},{"generated":{"line":50,"column":22},"source":"main.js","original":{"line":53,"column":22}},{"generated":{"line":50,"column":31},"source":"main.js","original":{"line":53,"column":12}},{"generated":{"line":50,"column":33},"source":"main.js","original":{"line":53,"column":33}},{"generated":{"line":50,"column":34},"source":"main.js","original":{"line":53,"column":12}},{"generated":{"line":50,"column":35},"source":"main.js","original":{"line":53,"column":0}}],"sources":{"main.js":"/* const heropy = {\r\n  firstName: 'Hyun Tak',\r\n  lastName: 'Kim',\r\n  getFullName: function () {\r\n    return `${this.firstName} ${this.lastName}`\r\n  }\r\n}\r\nconsole.log(heropy.getFullName())\r\n\r\nfunction user(first2, last2) {\r\n  this.firstName = first2\r\n  this.lastName = last2\r\n}\r\nuser.prototype.getFullName = function () {\r\n  return `${this.firstName} ${this.lastName}`\r\n}\r\n\r\nconst heropy2 = new user('Hyun Tak', 'Kim')\r\n\r\nconsole.log(heropy2.getFullName()) */\r\n\r\n// this\r\n// 일반(Normal) 함수는 호출 위치에서 따라 this 정의!\r\n// 화살표(Arrow) 함수는 자신이 선언된 함수 범위에서 this 정의!\r\n\r\n/* const heropy = {\r\n  name: 'Heropy',\r\n  normal: function () {\r\n    console.log(this.name)\r\n  },\r\n  arrow: () => {\r\n    console.log(this.name)\r\n  }\r\n}\r\nheropy.normal()\r\nheropy.arrow()\r\n\r\nconst amy = {\r\n  name: 'Amy',\r\n  normal: heropy.normal,\r\n  arrow: heropy.arrow\r\n}\r\namy.normal()\r\namy.arrow() */\r\n\r\n/* const result = 'Hello world!'.indexOf('Heropy')\r\nconsole.log(result) \r\n\r\n// String.prototype.indexOf() */\r\n\r\nconst str = 'eggu24@gmail.com'\r\n\r\nconsole.log(str.match(/.+(?=@)/)[0])"},"lineCount":null}},"error":null,"hash":"455a8bbcb63d2522e5332db6c2e00e8d","cacheData":{"env":{}}}